# backend/docker-compose.yml
# postgres/Dockerfile을 사용하여 커스텀 이미지를 빌드하고,
# init-db 폴더의 스크립트를 실행하여 데이터베이스를 초기화

services:
  db:
    # 공식 이미지 대신 프로젝트의 postgres 폴더에 있는 Dockerfile을 사용하여
    # pg_uuidv7이 설치된 커스텀 이미지를 빌드
    build: ./postgres

    container_name: band-matching-db
    ports:
      - "5432:5432"
    networks:
      - shared-net
    volumes:
      # 데이터베이스 데이터를 영구적으로 저장하기 위한 볼륨
      - postgres_data:/var/lib/postgresql/data
      # 컨테이너가 처음 생성될 때 실행될 초기화 스크립트 폴더를 연결
      - ./init-db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=banduser
      - POSTGRES_PASSWORD=bandpassword
      - POSTGRES_DB=banddb
    restart: always

#  app:
#    build: .
#    container_name: band-matching-app
#    ports:
#      - "8000:8000"
#    networks:
#      - shared-net
#    volumes:
#      - .:/app
#    # .env 파일을 직접 컨테이너 안으로 전달
#    env_file:
#      - .env
#    depends_on:
#      - db
#    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: band-matching-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    networks:
      - shared-net
    depends_on:
      - db
    restart: always

volumes:
  postgres_data:

networks:
  shared-net:
    driver: bridge
